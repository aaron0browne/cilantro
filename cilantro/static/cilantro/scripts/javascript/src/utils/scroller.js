// Generated by CoffeeScript 1.3.3

define(['jquery', 'underscore'], function($, _) {
  var Scroller, defaultOptions;
  defaultOptions = {
    threshold: 0.75
  };
  Scroller = function(element, options) {
    var _this = this;
    this.element = $(element);
    this.options = options;
    if (options.relative) {
      this.height = this.element.find(options.relative).innerHeight() - this.element.innerHeight();
    } else {
      this.height = this.element.innerHeight();
    }
    this.threshold = this.height * options.threshold;
    this.element.on('scroll', _.debounce(function() {
      if (!_this.reached && _this.element.scrollTop() >= _this.threshold) {
        _this.reached = true;
        return _this.element.trigger('scroller');
      }
    }, 50));
    if (options.trigger) {
      this.element.on('scroller', options.trigger);
    }
    return this;
  };
  Scroller.prototype = {
    constructor: Scroller,
    reset: function() {
      this.reached = false;
      if (this.options.relative) {
        this.height = this.element.find(this.options.relative).innerHeight() - this.element.innerHeight();
      } else {
        this.height = this.element.innerHeight();
      }
      this.threshold = this.height * this.options.threshold;
      return this;
    }
  };
  $.fn.scroller = function(option) {
    var options;
    if ($.isPlainObject(option)) {
      options = $.extend({}, option, defaultOptions);
    } else {
      options = $.extend({}, defaultOptions);
    }
    return this.each(function() {
      var $this, data;
      $this = $(this);
      data = $this.data('scroller');
      if (!data) {
        $this.data('scroller', (data = new Scroller(this, options)));
      }
      if (typeof option === 'string') {
        return data[option]();
      }
    });
  };
  return $.fn.scroller.Constructor = Scroller;
});
