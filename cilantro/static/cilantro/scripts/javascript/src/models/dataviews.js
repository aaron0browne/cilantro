// Generated by CoffeeScript 1.3.3
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['environ', 'mediator', 'underscore', 'serrano'], function(environ, mediator, _, Serrano) {
  var DataViewHistory, DataViews;
  DataViews = (function(_super) {

    __extends(DataViews, _super);

    function DataViews() {
      return DataViews.__super__.constructor.apply(this, arguments);
    }

    DataViews.prototype.url = environ.absolutePath('/api/views/');

    DataViews.prototype.initialize = function() {
      return this.deferred = this.fetch();
    };

    DataViews.prototype.getNamed = function() {
      return this.filter(function(model) {
        return model.get('name');
      });
    };

    return DataViews;

  })(Serrano.DataViews);
  DataViewHistory = (function(_super) {

    __extends(DataViewHistory, _super);

    function DataViewHistory() {
      return DataViewHistory.__super__.constructor.apply(this, arguments);
    }

    DataViewHistory.prototype.url = environ.absolutePath('/api/views/history/', {
      initialize: function() {
        return this.deferred = this.fetch();
      }
    });

    return DataViewHistory;

  })(Serrano.DataViews);
  App.DataView = new DataViews;
  App.DataViewHistory = new DataViewHistory;
  return App.DataView.deferred.done(function() {
    var session;
    if (!(session = App.DataView.getSession())) {
      session = App.DataView.create({
        session: true
      });
    }
    App.DataView.session = session;
    return session.on('sync', function() {
      return mediator.publish('dataview/change');
    });
  });
});
