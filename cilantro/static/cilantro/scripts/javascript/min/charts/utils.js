define(["highcharts"],function(Highcharts){var dateRegexp,getColor,parseDate,processResponse;return getColor=function(idx){var colors;return colors=Highcharts.getOptions().colors,colors[idx%colors.length]},dateRegexp=/\d{4}-\d{2]-\d{2]/,parseDate=function(str){var day,month,year;return year=parseInt(str.substr(0,4)),month=parseInt(str.substr(5,2))-1,day=parseInt(str.substr(8,2)),Date.UTC(year,month,day)},processResponse=function(resp,fields,seriesIdx){var avg,chartType,clustered,color,formatterFunc,i,idx,max,name,norm,options,p,point,series,seriesData,seriesList,seriesNo,svalue,x,xEnum,xField,xLabels,xName,xType,xlen,y,yEnum,yField,yLabels,yName,yType,ylen,_i,_j,_len,_len1,_ref,_ref1;if(fields.length>2)throw new Error("3-dimensional charts are not supported.                Specify which field the series applies to.");if(!fields)throw new Error("The datafield instances must be supplied");xLabels=[],yLabels=[],xField=fields[0],yField=fields[1],xName=xField.get("name"),xEnum=xField.get("data").enumerable||xField.get("data").type==="boolean",xType=xField.get("data").type==="date"?"datetime":"linear",yField?(yName=yField.get("name"),yEnum=yField.get("data").enumerable||yField.get("data").type==="boolean",yType=yField.get("data").type==="date"?"datetime":"linear"):(yName="Frequency",yEnum=!1,yType="linear"),xEnum&&yEnum?(chartType="scatter",xLabels.push(" "),yLabels.push(" ")):yField&&!xEnum&&!yEnum?chartType="scatter":yEnum?chartType="scatter":xType==="datetime"||yType==="datetime"?chartType="line":chartType="column",seriesData={},clustered=resp.clustered,_ref=resp.data;for(i=_i=0,_len=_ref.length;_i<_len;i=++_i)point=_ref[i],seriesIdx!=null?svalue=point.values.slice(seriesIdx,seriesIdx+1)[0]:svalue="",(series=seriesData[svalue])?(series.data.push(point),series.stats.min=Math.min(series.stats.min,point.count),series.stats.max=Math.max(series.stats.max,point.count),series.stats.sum+=point.count):(series=seriesData[svalue]={name:svalue,stats:{min:point.count,max:point.count,sum:point.count}},xEnum&&yEnum?series.data=[{x:0,y:0,radius:0,sentinel:!0},point]:series.data=[point]),x=point.values[0],x===null&&(x="(no data)"),xEnum?((idx=xLabels.indexOf(x.toString()))===-1&&(idx=xLabels.push(x.toString())-1),x=idx):xType==="datetime"&&(x=parseDate(x)),yField?(y=point.values[1],y===null&&(y="(no data)"),yEnum?((idx=yLabels.indexOf(y.toString()))===-1&&(idx=yLabels.push(y.toString())-1),y=idx):yType==="datetime"&&(y=parseDate(y))):y=point.count,point.x=x,point.y=y;seriesList=[],xEnum&&yEnum&&(xlen=xLabels.push(" ")-1,ylen=yLabels.push(" ")-1),seriesNo=0;for(name in seriesData){series=seriesData[name],xEnum&&yEnum&&(series.data.push({x:0,y:ylen,radius:0,sentinel:!0}),series.data.push({x:xlen,y:ylen,radius:0,sentinel:!0}),series.data.push({x:xlen,y:ylen,radius:0,sentinel:!0})),seriesList.push(series),avg=series.stats.avg=series.stats.sum/parseFloat(series.data.length,10),max=series.stats.max;if(chartType==="scatter"){_ref1=series.data;for(_j=0,_len1=_ref1.length;_j<_len1;_j++){p=_ref1[_j];if(p.sentinel)continue;norm=Math.min(Math.max(parseInt(parseFloat(p.count,10)/avg*5)/10,.05),1),color=Highcharts.Color(getColor(seriesNo)).setOpacity(norm),p.marker={fillColor:color.get()},xEnum&&(p.marker.radius=7)}}seriesNo++}return chartType==="scatter"&&xEnum?seriesList[1]?formatterFunc=function(){return"<b>"+this.series.name+"</b><br>"+this.point.count+" for ("+this.series.xAxis.categories[this.point.x]+", "+this.series.yAxis.categories[this.point.y]+")"}:formatterFunc=function(){return""+this.point.count+" for ("+this.series.xAxis.categories[this.point.x]+", "+this.series.yAxis.categories[this.point.y]+")"}:seriesList[1]?formatterFunc=function(){return"<b>"+this.series.name+"</b><br>"+this.point.count+" for ("+Highcharts.numberFormat(parseFloat(this.x))+", "+Highcharts.numberFormat(parseFloat(this.y))+")"}:formatterFunc=function(){return""+this.point.count+" for ("+Highcharts.numberFormat(parseFloat(this.x))+", "+Highcharts.numberFormat(parseFloat(this.y))+")"},options={clustered:clustered,chart:{type:chartType},title:{text:yField?""+xName+" vs. "+yName:""+xName+" "+yName},series:seriesList,xAxis:{title:{text:xName},type:xType},yAxis:{title:{text:yName},type:yType},tooltip:{formatter:formatterFunc,borderRadius:3,borderWidth:1}},xLabels.length&&(options.xAxis.categories=xLabels),yLabels.length&&(options.yAxis.categories=yLabels),seriesList[1]||(options.legend={enabled:!1}),chartType==="scatter"&&(options.yAxis.gridLineWidth=0,xEnum||(options.chart.zoomType="xy")),options},{processResponse:processResponse}})