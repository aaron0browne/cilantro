@mixin inline-block {
    display: inline-block;
    *display: inline;
    zoom: 1;
}

// adds a letter "press" effect to the text. this effects only works if the
// surrounding color is lighter than the text color
@mixin letterpress($color, $blur: 2px) {
    color: $color;
    text-shadow: 0 1px $blur lighten($color, 70);
}

// adds a letter "pop" effect to the text. this effects only works if the
// surrounding color is darken than the text color
@mixin letterpop($color, $blur: 2px) {
    color: $color;
    text-shadow: 0 1px $blur darken($color, 70);
}

// renders a single cross-browser shadow
@mixin shadow($s) {
	-moz-box-shadow: $s; 
	-webkit-box-shadow: $s;
	box-shadow: $s;
}

// renders two shadows
@mixin dual-shadow($s1, $s2) {
	-moz-box-shadow: $s1, $s2;
	-webkit-box-shadow: $s1, $s2;
	box-shadow: $s1, $s2;
}

// renders three shadows
@mixin tri-shadow($s1, $s2, $s3) {
	-moz-box-shadow: $s1, $s2, $s3;
	-webkit-box-shadow: $s1, $s2, $s3;
	box-shadow: $s1, $s2, $s3;
}

// sets the opacity of an element. this is not to be confused with
// the official Sass function that "opacifies" a color
@mixin opacify($p) {
    filter:alpha(opacity=$p);
    -moz-opacity: $p/100;
    opacity: $p/100;
}

// sets the border radius of an element
@mixin radius($r) {
    -moz-border-radius: $r;
    border-radius: $r;
}


// shorcut to set anchor colors for each pseudo state
@mixin anchors($c1, $c2) {
    a {
        &:link, &:visited { color: $c1; }        
        &:hover, &:active { color: $c2; }
    }
}

// sets the background of an element with a vertical linear gradient
@mixin vertical-gradient($c1, $c2) {
    background: $c1;
    background-image: -moz-linear-gradient(-90deg, $c1, $c2);
    background-image: -webkit-gradient(linear, 0% 0%, 0% 100%, from($c1), to($c2));
    filter: progid:DXImageTransform.Microsoft.Gradient(startColorstr='#{$c1}', endColorstr='#{$c2}');
}

// adds a "raised" appearance to the element
@mixin raised($color, $blur: 2px) {
    @include dual-shadow(0 1px $blur desaturate(lighten($color, 20), 20) inset, 0 -1px $blur darken($color, 5) inset);
    @include vertical-gradient($color, darken($color, 5));
}

// adds an "inset" appearance to the element
@mixin inset($color) {
    background-color: $color;
    @include dual-shadow(0 1px 2px darken($color, 20) inset, 0 1px 1px lighten($color, 60));
}

// makes the element appear to be slightly floating above other elements
@mixin floated($color, $blur: 2px) {
    @include shadow(0 2px $blur desaturate(darken($color, 15), 10));
    @include vertical-gradient($color, darken($color, 5));
}

// shorcut to define a message color scheme
@mixin message($color, $image) {
    color: $color;
	padding: 3px 0 3px 23px;
	background-image: url(../img/icons/#{$image}.png);
    background-repeat: no-repeat;
    background-position-y: center;
}


// WebKit only: sets the scrollbar to be thinner and less obtrusive
@mixin vertical-thin-scrollbar {
    &::-webkit-scrollbar {
        width: 1ex;
    }

    &::-webkit-scrollbar-thumb:vertical {
        background: rgba(0, 0, 0, 0.2);
        -webkit-border-radius: 1ex;
    }    
}

// WebKit only: sets the scrollbar to be thinner and less obtrusive
@mixin horizontal-thin-scrollbar {
    &::-webkit-scrollbar {
        height: 1ex;
    }

    &::-webkit-scrollbar-thumb:horizontal {
        background: rgba(0, 0, 0, 0.2);
        -webkit-border-radius: 1ex;
    }    
}

// sets the appearance of an input element to have the Mac OS X-style
// search boxes
@mixin search-box {
    @include radius(15px);
    @include shadow(2px 2px 3px #ddd inset);
    
    background: #fff url(../img/icons/search.png) no-repeat 3px;
    padding: 2px 5px 2px 21px;
    border: 1px solid #999;
}
